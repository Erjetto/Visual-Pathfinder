Todo:
	✔ Change ChangeState to retrieve object instead @done(19-11-06 14:35)
	✔ Rework the pseudocode implementation @done(19-12-27 20:58)
		1. The scope should represent an object inside an object for easy code jump
			ex 
				`{`
					`pseudocode -> 'if state is empty'`
					`scope -> [`
						`{ pseudocode -> '  set node value', execute -> {}, etc },`
						`{ pseudocode -> '  set node parent', execute -> {}, etc },`
					`]`
					`execute -> {} -> push scope to commands stack if condition is true`
				`}`
		2. Structure for line ->
			`{`
				`lineIndex -> for easy line index `
				`pseudocode,`
				`scope -> []`
				`execute -> `
				`undo`
				`explanation -> 'The state is ${node.state} so it's true'`
			`}`
		3. If loop -> push scope then push itself
		4. If condition -> only push scope
		✘ Add `verbose_mode` to decrease amount of *line jumps* ? @cancelled(19-12-26 20:14)
			1. Priority 1 -> stops
			2. Priority 0 -> skips
	✔ Changing node in view is too hard because setNodeToState() is badly implemented @done(19-12-27 20:58)
	✔ NODE_STATE.START & END shouldn't be a real NODE_STATE, remove it later @done(19-11-06 14:35)
		change validation to this.startNode instead
	☐ List of animations to be added:
		✘ Show the neighbour @cancelled(19-12-27 20:58)
			Glow or scale animation?
		☐ Set parent visited animation
			Is this neccessary?
		✔ Calculate f,g,h animation @done(19-12-27 20:58)
		✔ Show preview @done(19-12-27 20:58)
			When hover a node, show something
	✔ Add explanation below the pseudocode @done(19-11-06 14:35)
	☐ Add dropdown to choose pseudocode
		A* or Dijkstra
	☐ Add methods for calculator
		✘ GetNeighbour(index) @cancelled(19-11-06 14:36)

Note:
	Animation can be skipped if user uses AutoPlay
	Queue or OpenSet? -> Queue

	translate(-4px, 71px) scale(1.2) -> scale first, then move

Modules:
	✔ Membuat node berupa grid 20x20 @done(19-12-27 20:58)
	✔ Node berubah warna menjadi hijau jika ditandai sebagai node awal @done(19-12-27 20:58)
	✔ Node berubah menjadi warna merah jika ditandai sebagai node akhir @done(19-12-27 20:58)
	✔ Node berubah menjadi warna abu-abu jika ditandai sebagai node yang tidak dapat dilalui @done(19-12-27 20:58)
	✔ Node berubah menjadi warna biru muda jika node possible untuk dilalui @done(19-12-27 20:58)
	✔ Node berubah menjadi warna biru gelap jika node sudah divisit/dilalui @done(19-12-27 20:58)
	☐ Membuat pathfinding menggunakan A* pada node grid yang sudah dibuat
	☐ Menampilkan proses pathfind 1 per 1 dan bisa di next step / previous step
	✔ Membuat tombol next & prev untuk step pathfind @done(19-12-27 20:59)
	✔ Menampilkan queue yang terjadi pada tiap step di sebelah kiri layar @done(19-12-27 20:58)
	✔ Menampilkan g, h, f pada tiap node @done(19-12-27 20:58)
